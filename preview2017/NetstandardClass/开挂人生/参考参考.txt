 // Response.Redirect
        string Hx_ReqUrl(string reqUrl, string method, string paramData, string token)
        {
            try
            {
                HttpWebRequest request = WebRequest.Create(reqUrl) as HttpWebRequest;
                request.Method = method.ToUpperInvariant();

                if (!string.IsNullOrEmpty(token) && token.Length > 1) { request.Headers.Add("Authorization", "Bearer " + token); }
                if (request.Method.ToString() != "GET" && !string.IsNullOrEmpty(paramData) && paramData.Length > 0)
                {
                    request.ContentType = "application/json";
                    byte[] buffer = Encoding.UTF8.GetBytes(paramData);
                    request.ContentLength = buffer.Length;
                    request.GetRequestStream().Write(buffer, 0, buffer.Length);
                }

                using (HttpWebResponse resp = request.GetResponse() as HttpWebResponse)
                {
                    using (StreamReader stream = new StreamReader(resp.GetResponseStream(), Encoding.UTF8))
                    {
                        string result = stream.ReadToEnd();
                        return result;
                    }
                }
            }
            catch (Exception ex)
            {
                return ex.ToString();
            }
        }


		 // const string sql = "update t_guard_sun_order set [status]=@status where [id]=@id;";
		  //return Connection.Execute(Connection.FormatSql(sql), new { id, state });
           // return Connection.Update(baseInfo) > 0;

		    string sql = $"select count(1) as count  from t_guard_sun_registered  where user_name =@UserName";
            
            var res = Connection.QuerySingle(Connection.FormatSql(sql),new {dto.UserName});
            if (res.count > 0)

			amespace Org.BouncyCastle.Crypto.Parameters
{
    public class RsaPrivateCrtKeyParameters : RsaKeyParameters
    {
        public RsaPr

		 //policyUrl = string.Format("{0}policyNo={1}&insuredName={2}&queryConditionType=person", policyUrl.Substring(0, policyUrl.IndexOf("policyNo")), policyNo, request.Request.Body.InsuredsInfo.Insureds.First().InsuredName);


		     var helper = new HttpHelper(Consts.Config.FileSite + "/uploader", "POST", Encoding.UTF8, $"action=base64&data={url}");
            var json = JsonHelper.Json<DResult<string>>(helper.GetHtml());
            i.Url = json.Status ? Consts.Config.FileSite + "/uploads" + json.Data : string.Empty;
            url = null;

			  Dictionary<string, string> param = new Dictionary<string, string>();
            param.Add("Mobile", resmod.Mobile);
            param.Add("UserName", resmod.Mobile);
            param.Add("Password", "666666Aa");
            var postResultStr = HttpHelper.Post(registerUrl, param);


			
                //string V2url = "http://140.143.96.228:8206/GuardOrderManage/ChangeOrderStatus";//回调与v2同步订单状态
                // string V2url = "http://172.22.50.97:82/GuardOrderManage/ChangeOrderStatusSinosig";//回调与v2同步订单状态

				
                    //string strJson = JsonHelper.ToJson(vimDto);